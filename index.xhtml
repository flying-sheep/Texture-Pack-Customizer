<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US" lang="en-US" dir="ltr">

<!--
	This Tool is licensed under the GPLv2
	
	This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
	
	The license is readable under
	http://www.gnu.org/licenses/gpl-2.0.txt
-->

<head>
	<title>JohnSmith Customizer</title>
	<link rel="stylesheet" href="style.css"/>
</head>


<body>
<article>

<header>
	<h1>Usage:</h1>
	<ol>
		<li>Select options on the right</li>
		<li>See what they do on the left</li>
		<li>Click on the image to save<br/>(Firefox users can use the Context Menu)</li>
		<li>Save as (or rename to) <code>terrain.png</code></li>
		<li>Replace <code>terrain.png</code> in <code>johnsmith_v7.2.zip</code></li>
	</ol>
	<h2>Extension</h2>
	<p>Made a texture pack?<br/>Want a customizer for one?</p>
	<button id="guide_button">Make your own customizer</button>
	<div id="guide">
		<h1>How to extend the Customizer</h1>
		This tool basically consists of three parts:
		<ol>
			<li>This XHTML5 page (press <code>Ctrl+S</code> to save it to your PC)</li>
			<li>A directory named <a href="terrain.png">terrain.png</a>, which contains the texture sheets<br/>(Yes, it is ends with .png, but is a directory)</li>
			<li>A big JSON tree, containing the preferences and their options</li>
		</ol>
		If you want to replace the whole texture pack and rewrite the options, you have to do the following:
		<ol>
			<li>Replace the contents of the <code>terrain.png</code>-directory with the alternative terrain.pngs you want to use. Rename them sensibly in the process, e.g. “v4.0.png” and “tweaks.png”.</li>
			<li>Replace the list of versions in the JavaScript with yours – minus the <code>.png</code> – e.g. <code>var versions = ["v4.0", "tweaks"];</code>. The last version in the list is initially drawn and it’s options selected.<br/><em>Note that if you use plain numbers truncateable to integers, like <code>4.0</code>, JavaScript <em>will</em> truncate them (in our example to <code>4</code>). Use Strings (<code>"4.0"</code>), or already truncated numbers (<code>4</code>) in this case.</em></li>
			<li>
				Now recreate the settings. <code>var settings</code> is assigned to a JSON tree with the following structure:
				<dl>
					<dt>1. Level: <em>settings</em></dt><dd>
						<p>Each setting appears under the name it was assigned to</p>
						<p>There is a special (optional!) setting called <code>override</code> with the single option <code>pack</code>, which is used to override certain parts of the initially drawn texture.</p></dd>
					<dt>2. Level: <em>options</em></dt><dd>
						<p>Each of these refers to one of the versions registered via the <code>versions</code> list.</p>
						<p>A special option called <code>coords</code> instead contains a list of texture coordinates.</p></dd>
					<dt>3. Level (inside each <code>coords</code> option): coordinates</dt><dd>
						Coordinates are in the form <code>[x,y]</code>, so e.g. <code>[0,15]</code> refers to the texture on the bottom of the first column (start of break animation).</dd>
				</dl>
				An small example for a settings variable would be:<pre><code>var settings = {
	"Pumpkin": {
		"Faceless":     6,
		"Creeper face": 7,
		"coords": [[6,6],[6,7],[7,7],[8,7]]
	}
};</code></pre>
			</li>
			<li>Finally don’t forget to replace the title of the HTML page!</li>
		</ol>
	</div>
</header>

<form id="settings">
	<canvas id="terrain"/>
</form>

<div id="versions_container">
	<button id="versions_button">Changelist</button>
	<dl id="versions">
		<h1>Changelist</h1>
		<dt>1.5a</dt><dd>Added “for” attribute to labels</dd>
		<dt>1.5</dt><dd>Internal changes thanks to Kurtextrem and aSakofDonuts</dd>
		<dt>1.4a</dt><dd>Readded SakOfDonuts’ glass &amp; glowstone<br/>Fixed TNT</dd>
		<dt>1.4</dt><dd>Redid Layout</dd>
		<dt>1.3a</dt><dd>Fixed TNT missing</dd>
		<dt>1.3</dt><dd>Added 7.4</dd>
		<dt>1.2a</dt><dd>Added 7.3a</dd>
		<dt>1.2</dt><dd>Added everything from V2 up</dd>
		<dt>1.1</dt><dd>Added 7.3</dd>
		<dt>1.0</dt><dd>Removed Doku’s textures on request<br/>Added changelist</dd>
		<dt>0.6</dt><dd>Added „Create your own“ instructions</dd>
		<dt>0.5</dt><dd>Added usage instructions<br/>restyle</dd>
		<dt>0.1</dt><dd>Basic functional version</dd>
	</dl>
</div>

<footer>
	This Tool is made by <a href="http://red-sheep.de">flying sheep</a> and licensed under the GPLv2.
	<aside>Textures by JohnSmith, tweaks by aSakofDonuts.</aside>
</footer>

</article>


<script type="text/javascript" src="lib/base64.js"/>
<script type="text/javascript" src="lib/canvas2image.js"/>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js"/>
<script type="text/javascript" src="lib/jcanvas.js"/>
<script type="text/javascript" src="terrain.js"/>
<script type="text/javascript">
/* <![CDATA[ */

var debug = false;

//INITIALIZATION
var lastVersion = versions[versions.length-1];

//FINISH INITIALISATION
$(document).ready(function() {
	var canvas = $("#terrain")
		.attr("width",  512)
		.attr("height", 512) //TODO
		.click(saveCanvas)
		.bind("contextmenu", saveCanvas)
	;
	
	canvas.drawImage({source: imgPath(lastVersion)});
	if ("override" in settings)
		swap("override", "pack");
	
	
	var form = $("#settings");
	
	for (var settingName in settings) {
		if (settingName == "override") break;
		
		setting = settings[settingName];
		
		var select =
			$("<select/>", {"id": settingName})
				.appendTo(
					$("<div/>")
						.append(
							$("<label/>", {"for": settingName})
								.text(settingName)
						)
						.appendTo(form)
				)
		;
		
		for (var optionName in setting) {
			if (optionName == "coords") break;
			
			var option = $("<option/>")
				.text(optionName)
				.appendTo(select);
			
			if (setting[optionName] == lastVersion)
				option.attr("selected", "selected");
		}
		
		function selected(aEvt) {
			var sel  = aEvt.target;
			var opt  = sel.options[sel.selectedIndex].textContent;
			swap(sel.id, opt);
		}
		select.change(selected);
		select.keyup(selected);
	}
	
	blockToggle("guide");
	blockToggle("versions");
	
	if (debug) for (var v in versions) {
		$("body")
			.append(
				$("<h1/>")
					.text("terrain.png version: "+v)
			)
			.append(
				$("<img/>")
					.attr("src", imgPath(versions[v]))
			)
		;
	}
});

//HELPER FUNCTIONS
function saveCanvas() {Canvas2Image.saveAsPNG($("#terrain")[0])}
function imgPath(name) {return "terrain.png/"+name+".png"}

function swap(settingName, optionName) {
	if (debug) console.log("Set", settingName, "to", optionName);
	
	var setting = settings[settingName];
	
	var img = imgPath(setting[optionName]);
	var coords = setting.coords;
	
	if (debug) console.log("Use", img, "for tiles", coords);
	
	var canvas = $("#terrain");
	
	var u = canvas.width()/16;
	
	coords.forEach(function(coord) {
		var x = coord[0] * u + u/2;
		var y = coord[1] * u + u/2;
		
		canvas
			.clearCanvas({
				x:x,     y:y,
				width:u, height:u
			})
			.drawImage({
				source: img,
				sourceX:x,     sourceY:y,
				sourceWidth:u, sourceHeight:u,
				x:x,     y:y,
				width:u, height:u
			})
		;
	});
}

function blockToggle(id) {
	var inButton = $("#"+id+"_button");
	var content  = $("#"+id);
	
	var outButton = inButton.prev("button");
	
	if (outButton.length == 0) {
		outButton =
			$("<button/>")
				.text("×")
				.css({
					"display": "none",
					"float": "right"
				})
				.insertBefore(inButton)
		;
	}
	
	inButton.click(function() {
		inButton.toggle();
		content.fadeToggle("fast", function() {
			outButton.slideToggle("fast");
		});
	});
	outButton.click(function() {
		outButton.toggle();
		content.fadeToggle("fast", function() {
			inButton.slideToggle("fast");
		});
	});
}

/* ]]> */
</script>


</body>
</html>
