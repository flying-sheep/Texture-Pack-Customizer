<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US" lang="en-US" dir="ltr">

<!--
	This Tool is licensed under the GPLv2
	
	This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
	
	The license is readable under
	http://www.gnu.org/licenses/gpl-2.0.txt
-->

<head>

<title>JohnSmith Customizer</title>
<style type="text/css">

body {
	font-family: sans-serif;
	margin: 0;
	padding: 1em;
}
em em,
dt {font-weight: bold}
code > pre {outline: 1px dashed white}

#stage {
	padding: .5em;
	border: 1em solid black;
	margin-bottom: 3.2em;
}

#stage,
body > aside,
form,
canvas {float:left}

body > aside,
footer {
	display: block;
	background-color:black;
	color: white;
	padding: 1ex 1%;
}

body > aside {max-width: 450px}

footer > aside {float:right}

footer {
	position:fixed;
	bottom: 0;
	left: 0;
	width: 98%;
	position: fixed;
}
footer a:link,
footer a:visited {color: #0cf; text-decoration: none}
footer a:link:hover,
footer a:visited:hover {color: #0cf; text-decoration: underline}

form,
canvas {margin: .5em}
canvas {cursor: pointer}
form   {display: table}
label,
select {display: table-cell}
label  {text-align: right}
select {color: buttontext}

#guide {display:none; margin-bottom:3em}

#versions_container {
	position: fixed;
	top: 0;
	right: 0;
	background-color: rgba(255,255,255,.6);
	border: solid rgba(0,0,0,.6);
	border-width: 0 0 1px 1px;
	border-radius: 1em;
	border-top-right-radius: 0;
	padding: 1ex;
}
#versions_button {opacity: .6}
#versions        {display: none}

/* debug */
h1 {clear:left}

</style>
<script type="text/javascript" src="bas64.js"/>
<script type="text/javascript" src="canvas2image.js"/>
<script type="text/javascript">
/* <![CDATA[ */

//INITIAL SETTINGS
var debug = false;

var versions = ["sakofdonuts", 6, 7, 7.1, 7.2];

var settings = {
	"Stone & Ore": {
		"dark":  6,
		"light": 7.2,
		"coords": [[1,0], [0,2], [1,2], [2,2], [2,3], [3,3], [0,10]]},
	"Cobble & Moss": {
		"dark":   6,
		"bricks": 7,
		"light":  7.2,
		"coords": [[0,1],[4,2]]},
	"Stone Slab": {
		"cobble":   6,
		"shaded":   7,
		"unshaded": 7.2,
		"coords": [[5,0],[6,0]]},
	"Planks": {
		"light": 6,
		"mixed": 7,
		"dark":  7.2,
		"coords": [[4,0]]},
	"Brickwall": {
		"stone": 6,
		"mortarless": 7,
		"mortar": 7.2,
		"coords": [[7,0]]},
	"Obsidian": {
		"firey": 6,
		"black": 7.2,
		"coords": [[5,2]]},
	"Nether": {
		"low contrast":  6,
		"high contrast": 7.2,
		"coords": [[7,6],[8,6]]},
	"Wool": {
		"rough":    6,
		"stitched": 7.1,
		"smooth":   7.2,
		"coords": [[0,4],
			[1,7],[1,8],[1,9],[1,10],[1,11],[1,12],[1,13],[1,14],
			[2,7],[2,8],[2,9],[2,10],[2,11],[2,12],[2,13]]},
	"Wooden door": {
		"fancy window": 6,
		"plain window": 7.2,
		"coords": [[1,5],[1,6]]},
	"Ladder": {
		"bound":    7,
		"nailed":   7.2,
		"nailed 2": "sakofdonuts",
		"coords": [[3,5]]},
	"Glass": {
		"light frame": 6,
		"heavy frame": 7,
		"only frame":  7.1,
		"grate":       7.2,
		"mini frame":  "sakofdonuts",
		"coords": [[1,3]]},
	"Glowstone": {
		"organic": 6,
		"frame":   7,
		"asian":   7.1,
		"grate":   7.2,
		"coords": [[9,6]]},
	"Wheat": {
		"chaotic": 6,
		"upright": 7.2,
		"coords": [[8,5],[9,5],[10,5],[11,5],[12,5],[13,5],[14,5],[15,5]]},
	"Shrooms": {
		"skinny": 7.2,
		"fat":    "sakofdonuts",
		"coords": [[12,1],[13,1]]},
	"Snowy grass": {
		"iced":   6,
		"topped": 7.2,
		"coords": [[4,4]]},
	"Pumpkin": {
		"jack":  6,
		"unlit": 7,
		"lit":   7.2,
		"creeper": "sakofdonuts",
		"coords": [[6,6],[6,7],[7,7],[8,7]]},
	"Torch": {
		"slim":    6,
		"guarded": 7.2,
		"coords": [[0,5]]},
	//Doku doesn’t want these to be used, so I removed the settings.
	//Left them in comments if somebody wants to use the coordinates.
	/*"Bookshelf": {
		"wimpy":      7.2,
		"reinforced": "sakofdonuts",
		"coords": [[3,2]]},
	"Bed": {
		"brown": 7.2,
		"blue":  "sakofdonuts",
		"coords": [[6,8],[7,8],[5,9],[6,9],[7,9],[8,9]]},*/
	
	//this setting is used to specify overrides. textures are sawpped with it immidiately after initial painting
	"override": {
		"pack": "sakofdonuts",
		"coords": [
			[3,0],       //sidegrass
			[11,0],      //web
			[3,8], [3,9] //repeater
		]}
	//TODO (custom alternative): other break anims
	//TODO: externalize
};

//INITIALIZATION
var lastVersion = versions[versions.length-1];
var vs = {};
var loaded = versions.length;
for (var i=0; i<versions.length; i++) {
	var img = new Image;
	img.src = "terrain.png/"+versions[i]+".png";
	vs[versions[i]] = img;
	img.addEventListener("load", function() {
		loaded--;
		if (loaded==0) {
			if (document.readyState != "loading") init();
			else document.addEventListener("DOMContentLoaded", init, false);
		};
	}, false);
}

//FINISH INITIALISATION
function init() {
	var canvas = document.getElementById("terrain");
	canvas.width  = vs[lastVersion].width;
	canvas.height = vs[lastVersion].height;
	
	var ctx = canvas.getContext("2d");
	ctx.drawImage(vs[lastVersion],0,0);
	if ("override" in settings)
		swap("override", "pack");
	
	canvas.addEventListener("click", function() {Canvas2Image.saveAsPNG(canvas)}, false);
	
	var form = document.getElementById("settings");
	
	for (var settingName in settings) {
		if (settingName == "override") break;
		
		setting = settings[settingName];
		
		var tr = document.createElement("tr");
		var label = document.createElement("label");
		label.textContent = settingName;
		var select = document.createElement("select");
		select.name = settingName;
		
		for (var optionName in setting) {
			if (optionName == "coords") break;
			
			var option = document.createElement("option");
			option.textContent = optionName;
			option.selected = setting[optionName] == lastVersion;
			
			select.appendChild(option);
		}
		
		select.addEventListener("change", function(aEvt) {
			var sel  = aEvt.target;
			var opt  = sel.options[sel.selectedIndex].textContent;
			swap(sel.name, opt);
		}, false);
		
		form.appendChild(tr);
		tr.appendChild(label);
		tr.appendChild(select);
	}
	
	blockToggle("guide");
	blockToggle("versions");
	
	if (debug) for (var v in vs) {
		var h = document.createElement("h1");
		h.textContent = "terrain.png v"+v;
		document.body.appendChild(h);
		document.body.appendChild(vs[v]);
	}
}

//HELPER FUNCTIONS
function swap(settingName, optionName) {
	if (debug) console.log("Set", settingName, "to", optionName);
	
	var setting = settings[settingName];
	
	var img = vs[setting[optionName]];
	var coords = setting.coords;
	
	if (debug) console.log("Use", img, "for tiles", coords);
	
	var canvas = document.getElementById("terrain");
	var ctx = canvas.getContext("2d");
	
	if (debug) console.log(canvas, ctx);
	
	var u = canvas.width/16;
	
	for (var c=0; c<coords.length; c++) {
		var x = coords[c][0] * u;
		var y = coords[c][1] * u;
		
		ctx.clearRect(x,y,u,u);
		ctx.drawImage(img,x,y,u,u,x,y,u,u);
	}
}

function blockToggle(id) {
	var inButton = document.getElementById(id+"_button");
	var content  = document.getElementById(id);
	
	var outButton = inButton.previousSibling;
	if (!(outButton.tagName == "button")) {
		outButton = document.createElement("button");
		outButton.textContent = "×";
		outButton.setAttribute("style", "display: none; float: right");
		inButton.parentNode.insertBefore(outButton, inButton);
	}
	
	inButton.addEventListener("click", function () {
		inButton .style.display = "none";
		outButton.style.display = "block";
		content.style.display   = "block";
	}, false);
	
	outButton.addEventListener("click", function () {
		outButton.style.display = "none";
		inButton .style.display = "block";
		content.style.display   = "none";
	}, false);
}

/* ]]> */
</script>


</head>
<body>


<aside>
	<h1>Usage:</h1>
	<ol>
		<li>Select options on the right</li>
		<li>See what they do on the left</li>
		<li>Click on the image to save<br/>(Firefox users can use the Context Menu)</li>
		<li>Save as (or rename to) <code>terrain.png</code></li>
		<li>Replace <code>terrain.png</code> in <code>johnsmith_v7.2.zip</code></li>
	</ol>
	<h2>Extension</h2>
	<p>Made a texture pack?<br/>Want a customizer for one?</p>
	<button id="guide_button">Make your own customizer</button>
	<div id="guide">
		<h1>How to extend the Customizer</h1>
		This tool basically consists of three parts:
		<ol>
			<li>This XHTML5 page (press <code>Ctrl+S</code> to save it to your PC)</li>
			<li>A directory named <a href="terrain.png">terrain.png</a>, which contains the texture sheets<br/>(Yes, it is ends with .png, but is a directory)</li>
			<li>A big JSON tree, containing the preferences and their options</li>
		</ol>
		If you want to replace the whole texture pack and rewrite the options, you have to do the following:
		<ol>
			<li>Replace the contents of the <code>terrain.png</code>-directory with the alternative terrain.pngs you want to use. Rename them sensibly in the process, e.g. “v4.0.png” and “tweaks.png”.</li>
			<li>Replace the list of versions in the JavaScript with yours – minus the <code>.png</code> – e.g. <code>var versions = ["v4.0", "tweaks"];</code>. The last version in the list is initially drawn and it’s options selected.<br/><em>Note that if you use plain numbers truncateable to integers, like <code>4.0</code>, JavaScript <em>will</em> truncate them (in our example to <code>4</code>). Use Strings (<code>"4.0"</code>), or already truncated numbers (<code>4</code>) in this case.</em></li>
			<li>
				Now recreate the settings. <code>var settings</code> is assigned to a JSON tree with the following structure:
				<dl>
					<dt>1. Level: <em>settings</em></dt><dd>
						<p>Each setting appears under the name it was assigned to</p>
						<p>There is a special (optional!) setting called <code>override</code> with the single option <code>pack</code>, which is used to override certain parts of the initially drawn texture.</p></dd>
					<dt>2. Level: <em>options</em></dt><dd>
						<p>Each of these refers to one of the versions registered via the <code>versions</code> list.</p>
						<p>A special option called <code>coords</code> instead contains a list of texture coordinates.</p></dd>
					<dt>3. Level (inside each <code>coords</code> option): coordinates</dt><dd>
						Coordinates are in the form <code>[x,y]</code>, so e.g. <code>[0,15]</code> refers to the texture on the bottom of the first column (start of break animation).</dd>
				</dl>
				An small example for a settings variable would be:<code><pre>var settings = {
	"Pumpkin": {
		"Faceless":     6,
		"Creeper face": 7,
		"coords": [[6,6],[6,7],[7,7],[8,7]]
	}
};</pre></code>
			</li>
			<li>Finally don’t forget to replace the title of the HTML page!</li>
		</ol>
	</div>
</aside>

<div id="stage">
	<canvas id="terrain"/>
	<form id="settings"/>
</div>

<div id="versions_container">
	<button id="versions_button">Changelist</button>
	<dl id="versions">
		<h1>Changelist</h1>
		<dt>1.0</dt><dd>Removed Doku’s textures on request<br/>added changelist</dd>
		<dt>0.6</dt><dd>Added „Create your own“ instructions</dd>
		<dt>0.5</dt><dd>Added usage instructions<br/>restyle</dd>
		<dt>0.1</dt><dd>Basic functional version</dd>
	</dl>
</div>

<footer>
	This Tool is made by <a href="http://red-sheep.de">flying sheep</a> and licensed under the GPLv2.
	<aside>Textures by JohnSmith, tweaks by aSakofDonuts. Here his <a href="items.png">items.png</a>.</aside>
</footer>


</body>
</html>